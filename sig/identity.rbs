module Tanker::Identity
  def self.hash_user_id: (String app_id, String user_id) -> String

  def self.user_secret: (String hashed_user_id) -> String

  def self.assert_string_values: (Hash[(String | Symbol), String] hash) -> void

  def self.generate_app_id: (String app_secret) -> String

  def self.deserialize: (String b64_json) -> Hash[String, String]

  def self.serialize: (Hash[(String | Symbol), String] hash) -> String

  def self.create_identity: (String b64_app_id, String b64_app_secret, String user_id) -> String

  def self.create_provisional_identity: (String b64_app_id, String email) -> String

  def self.get_public_identity: (String serialized_identity) -> String
end

Tanker::Identity::APP_CREATION_NATURE: ::Integer

Tanker::Identity::APP_SECRET_SIZE: ::Integer

Tanker::Identity::APP_PUBLIC_KEY_SIZE: ::Integer

Tanker::Identity::AUTHOR_SIZE: ::Integer

Tanker::Identity::BLOCK_HASH_SIZE: ::Integer

Tanker::Identity::USER_SECRET_SIZE: ::Integer
